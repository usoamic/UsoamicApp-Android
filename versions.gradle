/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/

ext.deps = [:]
def versions = [:]
versions.kotlin = '1.3.71'
versions.android_plugin_version = '2.3.0'
versions.android_gradle_plugin = '3.6.3'
versions.appcompat = '1.1.0'
versions.recyclerview = '1.1.0'
versions.core_ktx = '1.2.0'
versions.constraint_layout = '1.1.3'
versions.lifecycle = '2.2.0'
versions.rxandroid3 = '3.0.0'
versions.rxjava3 = '3.0.0'
versions.rxkotlin3 = '3.0.0'
versions.usoamickt = '1.1.5'
versions.threetenabp = '1.2.3'
versions.dagger = '2.27'
versions.gson = "2.8.5"
versions.web3j = "4.3.1"
versions.jupiter = "5.5.0"

ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.compile_sdk = 29
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.3"
ext.build_versions = build_versions

def deps = [:]
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:${versions.constraint_layout}"
deps.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
deps.threetenabp = "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.web3j = "org.web3j:core:$versions.web3j"
deps.annotations = "androidx.annotation:annotation:$versions.annotations"
deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
deps.core_ktx = "androidx.core:core-ktx:${versions.core_ktx}"
deps.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"

def android = [:]
android.plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
android.databinding_compiler = 'com.android.databinding:compiler:${$versions.android_gradle_plugin}'
deps.android = android

def rx = [:]
rx.android = "io.reactivex.rxjava3:rxandroid:$versions.rxandroid3"
rx.java = "io.reactivex.rxjava3:rxjava:$versions.rxjava3"
rx.kotlin = "io.reactivex.rxjava3:rxjava:$versions.rxkotlin3"
deps.rx = rx



def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
kotlin.jnit = "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
deps.lifecycle = lifecycle

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def junit = [:]
junit.jupiter = "org.junit.jupiter:junit-jupiter:$versions.jupiter"
deps.junit = junit

def usoamic = [:]
usoamic.kt = "com.github.usoamic:usoamickt:v${versions.usoamickt}"
deps.usoamic = usoamic

ext.deps = deps